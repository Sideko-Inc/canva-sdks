// Generated by Sideko (sideko.dev)
package canva_connect_api

import (
	"fmt"
	"io"
	"mime/multipart"
	"net/url"
	"os"
	"path"
	"strconv"
	"strings"
)

func anyToString(value interface{}) string {
	switch v := value.(type) {
	case int:
		return strconv.Itoa(v)
	case int64:
		return strconv.FormatInt(v, 10)
	case float64:
		return strconv.FormatFloat(v, 'f', -1, 64)
	case string:
		return v
	default:
		return fmt.Sprintf("%v", v)
	}
}

// addQueryParam is a generic function to add a query parameter to url.Values,
// supporting both exploding and non-exploding behavior.
func addQueryParam(queryParams url.Values, paramName string, value interface{}, explode bool) {
	if sliceValue, ok := value.([]string); ok {
		if explode {
			// If explode is true, add each element of the slice as a separate parameter
			for _, v := range sliceValue {
				queryParams.Add(paramName, v)
			}
		} else {
			// If explode is false, join the slice elements with a comma and add as a single parameter
			queryParams.Add(paramName, strings.Join(sliceValue[:], ","))
		}
	} else {
		// If explode is false, or value is not a slice, add the value as a single parameter
		queryParams.Add(paramName, anyToString(value))
	}
}

func addFileToFormDataWriter(writer *multipart.Writer, field string, file os.File) error {
	part, err := writer.CreateFormFile(field, path.Base(file.Name()))
	if err != nil {
		return err
	}

	_, err = io.Copy(part, &file)
	if err != nil {
		return err
	}

	return nil
}

func addFieldToFormDataWriter(writer *multipart.Writer, field string, value any) error {
	label, err := writer.CreateFormField(field)
	if err != nil {
		return err
	}
	label.Write([]byte(anyToString(value)))
	return nil
}
